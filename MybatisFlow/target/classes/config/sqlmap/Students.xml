<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，其作用是对sql进行分类化管理，理解sql隔离
 注意使用namespace代理方法开发，namespace有特殊的含义
 -->
<mapper namespace="com.markliu.mybatis.domain.StudentsMapper">
    <!-- 在该 namespace 下配置 sql 语句 -->

    <!-- 通过select执行数据库查询，
     id：表示映射文件中的sql，将sql语句封装到mappedStatement对象中，所以将id称为 Statement 的 id
     parameterType：表示输入参数的类型，此处根据 id 查询，所以为int类型
     resultType：指定返回的结果类型,注意指定的时 sql 返回的单条记录所专程java对象的类型 !
     #{stud_id}：#{}表示占位符，stud_id表述接受输入的参数，参数名为stud_id
     -->
    <select id="getStudentsById" parameterType="int" resultType="com.markliu.mybatis.domain.Students">
        SELECT * FROM students WHERE stud_id = #{stud_id}
    </select>

    <!-- 根据用户名称模糊查询用户信息的sql语句 -->
    <!-- 注意 resultType 指定的时 sql 返回的单条记录所专程java对象的类型 !
         即：此处因该是 Students，而不是 List
     ${}: 表示拼接sql串，将接收到的参数的内容不加任何修饰拼接到sql中
          注意： 此时需要注意写法时固定的，${value}，只能写value
    -->
    <select id="getStudentsByName" parameterType="java.lang.String" resultType="com.markliu.mybatis.domain.Students">
        SELECT * FROM students WHERE name LIKE '%${value}%'
    </select>
</mapper>